.686
.model flat, stdcall
option casemap:none


COMMENT * *

.data

.code

 SUM proc
   push ebp
   mov ebp, esp
   
   push eax
   push ebx
   push esi
   push edi
   push ecx
   
   mov ax, word ptr [ebp+8]
   mov bx, word ptr [ebp+12]
   
   mov esi, [ebp+24]
   mov edi, [ebp+28]
   mov ecx, [ebp+16]
   
   add ax, bx
   JNC L1
      mov byte ptr[esi], 0FFh         
   L1: 
   JNO L2
      mov byte ptr[edi], 0FFh   
   L2:
   
   mov word ptr [ecx], ax
   mov ecx, [ebp+20]
   mov word ptr [ecx], ax
   
   pop ecx
   pop edi
   pop esi
   pop ebx
   pop eax
   
   mov esp, ebp
   pop ebp
   ret 24
 SUM endp
 

 end 