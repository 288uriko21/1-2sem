unit module;

{!коробки и упаковки в данной программе не являются синонимами, в каждой коробке содержится некоторое количество упаковок!}
interface
const N = 60; {количество букв в названии фирмы}
      N2 = 30; {максимальнодопустимое количество упаковок}
type
     fir =  packed array[1..N] of char;
     T = array[1..N2] of integer;
     month = (jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec);
     sales = set of month;

     pastila = record   {тип коробки пастилы}
               avaliable, delivery: boolean;{показатели доступности для заказа и возможности доставки
                                             соответственно}
               sale: sales;{множество месяцев, в которые на коробку предоставляется скидка}
               taste: T;{массив вкусов (индекс - номер упаковки, значение - цифра, обозначающая вкус)}
               firm: fir;{название фирмы}
               rate, count, price: integer{рейтинг(целое число от 1 до 5), количество
                                           упаковок, цена соответственно}
     end;

     ff = file of pastila;
     pas = array[1..N] of pastila;

procedure printTaste;
function SumCost(m: pas; n, col, el: integer): integer;
function cchr(n: integer): month;
procedure readbox(var f: ff);
procedure outpMonthSale(col: integer; m: month; var a: pas);
procedure UdMonth(m: pas; col: integer);
procedure readpastil(var el: pastila);
Procedure five(a: pas; col, sum: integer);

implementation

{//////////ПЕЧАТЬ СПИСКА ВКУСОВ/////////////////////////////////////////////////////////}
(***************************************************************************************)
procedure printTaste;
begin
  writeln('1. Классическая');
  writeln('2. Вишнёвая');
  writeln('3. Черничная');
  writeln('4. С черной смородиной');
  writeln('5. С облепихой');
  writeln('6. Клубничная');
  writeln('7. Малиновая');
  writeln('8. С клюквой');
  writeln('9. С корицей');
  writeln('10. Ежевичная');
  writeln('11. Земляничная');
  writeln('12. С брусникой');
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)


{//////////ПЕЧАТЬ НАЗВАНИЯ МЕСЯЦА///////////////////////////////////////////////////////}
(***************************************************************************************)
procedure writemonth(i: month);
begin
  case i of
           jan: write('январь');
           feb: write('февраль');
           mar: write('март');
           apr: write('апрель');
           may: write('май');
           jun: write('июнь');
           jul: write('июль');
           aug: write('август');
           sep: write('сентябрь');
           oct: write('октябрь');
           nov: write('ноябрь');
           dec: write('декабрь');
         end
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)


{//////////////////Процедура для п.5 меню///////////////////////////////////////////////}
(***************************************************************************************)
Procedure five(a: pas; col, sum: integer);
var r, i, res: integer;
begin
  i:=1;
  r:=0;
  while i<=col do begin
     if (a[i].avaliable) and (a[i].price<=sum) and (a[i].rate>r) then begin
         r:=a[i].rate;
         res:=i;
     end;
     i:=1+i;
  end;
  if r=0 then
     write('Нет возможность купить коробку пастилы за эту сумму((')
  else
     write('Коробка №', res);
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)


{///////////////ФУНКЦИЯ ДЛЯ ПУНКТА 4 МЕНЮ///////////////////////////////////////////////}
(***************************************************************************************)
function SumCost(m: pas; n, col, el: integer): integer;
var i,c: integer;

(***********ПОДСЧЁТ КОЛИЧЕСТВО УПАКОВОК ПАСТИЛЫ С ЗАДАННЫМ ВКУСОМ В КОРОБКЕ ************)
function count(var a: T; el{вкус}: integer): integer;
var i,c: integer;
    flag: boolean;
begin
  i:=1;
  c:=0;{заменитель count}
  flag:= true;
  while (a[i]<>0) and flag do begin
     if a[i] = el then begin
       c:=c+1;
      // write(' *',i,'* ')
     end;
     i:=i+1;
    // write(a[i],'-');
     if i = N2 then begin
        flag:=false;
        i:=N2-1;
     end
  end;
 // write('************************');
  count:=c
end;
(***************************************************************************************)

begin
  i:=1;
  c:=maxInt;{т.к цена пастилы до 15000}
  while i<=col do begin
      if (count(m[i].taste, el)>=n) and (m[i].price<c) then
         c:=m[i].price;
      i:=i+1
  end;
  SumCost:=c;
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)


{////////////////ПРОЦЕДУРА ДЛЯ П.3 МЕНЮ/////////////////////////////////////////////////}
(***************************************************************************************)
procedure UdMonth(m: pas; col: integer);
var a: array[jan..dec] of integer;
    i: integer;
    j, res: month;
begin
  for j:=jan to dec do
      a[j]:=0;
  for j:=jan to dec do
      for i:=1 to col do
          if j in m[i].sale then
             a[j]:=a[j]+1;
  i:=0;
  res:= jan;
  for j:=jan to dec do
      if a[j]>i then begin
         i:=a[j];
         res:=j
      end;
  writemonth(res)
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)

{////////////////ПРОЦЕДУРА ДЛЯ ПУНКТА 2 МЕНЮ//////////////////////////////////////////////}
(***************************************************************************************)
procedure outpMonthSale(col: integer; m: month; var a: pas);
var i: integer;
    estskid: boolean;
begin
  i:=1;
  estskid:=false;
  while i<=col do begin
      if m in a[i].sale then begin
         writeln('Коробка №', i);
         estskid:=true;
      end;
      i:=i+1
  end;
  if not(estskid) then
     writeln('В заданном месяце нет скидок');
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)

{////////АНАЛОГ//ФУНКЦИИ/CHR//ДЛЯ//МЕСЯЦЕВ//////////////////////////////////////////////}
(***************************************************************************************)
function cchr(n: integer): month;
   var m: month;
  begin
   m:= jan;
   while ord(m)<>n-1 do
        m:=succ(m);
   cchr:=m;
  end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)

{//////////СЧИТЫВАНИЕ//ИНФОРМАЦИИ///КОРОБКЕ/////////////////////////////////////////////}
(***************************************************************************************)
procedure readpastil(var el: pastila);
var
  t: integer;
(*************ВВЫД**НАЗВАНИЯ**ФИРМЫ*****************************************************)
   procedure inputfirm(var f: fir);
  var i: integer;
      c: char;
  begin
    read(c);
    i:=1;
    while c<>'.' do begin
       f[i]:=c;
       i:=i+1;
       read(c)
    end;
    while i<>N+1 do begin
       f[i]:=' ';
       i:=i+1
    end
  end;
(***************************************************************************************)

begin
  writeln('Введите данные о коробке пастилы');
  writeln('Введите название фирмы, закончите ввод точкой');
  inputfirm(el.firm);
  writeln('Введите цену в рублях (целое число)(до 15000 рублей) ');
  readln(el.price);
  writeln('Введите 1, если пастила доступна для заказа и 0, если нет');
  readln(t);
  if t=1 then
     el.avaliable:=true
  else
     el.avaliable:=false;
  writeln('Введите 1, если есть возможность доставки на дом и 0, если нет');
  readln(t);
  if t=1 then
     el.delivery:=true
  else
     el.delivery:=false;
  writeln('Введите номера месяцев, в которых на пастилу есть скидки, закончите ввод числом 0 через пробел');
  el.sale:=[];
  read(t);
  while t<>0 do begin
        el.sale:=el.sale+[cchr(t)];
        read(t);
  end;
  writeln('Введите рейтин пастилы (целое число от 1 до 5)');
  readln(el.rate);
  writeln('Введите количество упаковок пастилы в коробке');
  readln(el.count);
  writeln('Введите последовательность цифр, соответствующую вкусам упаковок пастилы^^');
  printTaste;
  for t:=1 to el.count do
     read(el.taste[t]);
  for t:=el.count+1 to N2 do
     el.taste[t]:=0
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)

{///////////////////////////////////////////////////////////////////////////////////////}
(*************ФУНКЦИЯ**СЧИТЫВАНИЯ**(ДЛЯ П.1 ИЗ МЕНЮ)************************************)
procedure readbox(var f: ff);
var i, j: integer;
       p: pastila;

(********ПЕЧАТЬ МЕСЯЦЕВ, ПО КОТОРЫМ ПАСТИЛА СО СКИДКОЙ**********************************)
procedure sales(s: sales);
var i: month;
    flag: boolean;
begin
  flag:=false;
  write('Скидки на пастилу по месяцам: ');
  for i:=jan to dec do begin
      if i in s then begin
         if flag then
            write(', ');
         flag:=true;
         writemonth(i)
      end
  end;
  if flag = false then
     write('-');
end;
(***************************************************************************************)

(**********ПЕЧАТЬ ВКУСОВ****************************************************************)
procedure tastes(p: pastila);
var i: integer;
begin
  writeln('Вкусы по упаковкам соответственно: ');
  for i:=1 to p.count do begin
     case p.taste[i] of
        1: write('классическая');
        2: write('вишнёвая');
        3: write('черничная');
        4: write('с черной смородиной');
        5: write('с облепихой');
        6: write('клубничная');
        7: write('малиновая');
        8: write('с клюквой');
        9: write('с корицей');
        10: write('ежевичная');
        11: write('земляничная');
        12: write('с брусникой');
     end;
     if i<>p.count then
        write(', ')
  end;
  writeln;
end;
(***************************************************************************************)

begin
  reset(f);
  i:=1;
  while not(eof(f)) do begin
       read(f,p);
       writeln;
       if i<>1 then begin
         writeln('///////////////////////////////////////////////////');
         writeln;
         writeln
       end;
       writeln('Информация о коробке пастилы №', i);
       writeln;
       writeln('Фирма: ', p.firm);
       writeln;
       writeln('Цена: ', p.price);
       writeln;
       if p.avaliable = true then
          writeln('Доступна для заказа')
       else
          writeln('Не доступна для заказа');
       writeln;
       if p.delivery = true then
          writeln('Присутствует возможность доставки на дом')
       else
          writeln('Без возможности доставки на дом');
       writeln;
       writeln('Количество коробок: ', p.count);
       writeln;
       write('Рейтинг пастилы: ');
       for j:=1 to p.rate do
           write('* ');
       writeln;
       writeln;
       tastes(p);
       writeln;
       sales(p.sale);
       i:=i+1;
       writeln
  end
end;
{///////////////////////////////////////////////////////////////////////////////////////}
(***************************************************************************************)

end.








